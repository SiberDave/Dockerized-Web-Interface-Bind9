# Dockerfile for Web interface bind9 + dns server
# docker build -t "interface-bind9-backend:1" -f Dockerfile.backend .
FROM ubuntu:20.04

LABEL maintainer="dave.cloud.cyber@gmail.com"
LABEL description="Docker Container for Bind9 with setup RPZ and the backend of Web Interface Bind9"

RUN apt-get update \
  && apt-get install -y software-properties-common curl nano cron \ 
  && add-apt-repository -y ppa:isc/bind-dev

RUN curl -sL https://deb.nodesource.com/setup_21.x -o /tmp/nodesource_setup.sh && bash /tmp/nodesource_setup.sh

RUN apt-get update \
  && apt-get install -y bind9 bind9-utils gnupg jq nodejs

RUN mkdir -p /home/back_api /home/webScript /var/log/bind \ 
  && touch /home/webScript/dns-log \ 
  && chown -R bind:bind /var/log/bind

COPY ./Backend/. /home/back_api

COPY ./Script/. /home/webScript

COPY ./Config/Bind/named.conf.options /etc/bind/

COPY ./Config/Systemd/node_api.service /lib/systemd/system/

COPY ./Config/Cron/extract_dns_log /etc/cron.d/extract_dns_log

RUN chmod 600 /etc/cron.d/extract_dns_log

RUN /home/webScript/Generate_DOH_SSL.sh 127.0.0.1

RUN sed -i '/\/var\/cache\/bind\/ rw,/a \ \ \/var/log/bind/** rw,' "/etc/apparmor.d/usr.sbin.named" \ 
  && sed -i '/\/var\/cache\/bind\/ rw,/a \ \ \/var/log/bind/ rw,' "/etc/apparmor.d/usr.sbin.named" 

RUN cp /etc/bind/db.empty /etc/bind/db.ads.rpz \ 
  | cp /etc/bind/db.empty /etc/bind/db.blocked.rpz \
  | cp /etc/bind/db.empty /etc/bind/db.custom.dns \
  | cp /home/back_api/example.env /home/back_api/.env \
  && sed -i -e "s|LOG_PATH='.*'|LOG_PATH='/home/back_api/dns-log'|" "/home/back_api/.env"

WORKDIR /home/back_api

RUN npm install

EXPOSE 53/udp 3000

RUN chmod +x /home/webScript/*

ENTRYPOINT [ "/usr/lib/systemd/systemd" ]
